syntax = "proto3";
package csce438;
import "google/protobuf/timestamp.proto";

// ========== Data Structures ==========
message Request {
  string username = 1;
  repeated string arguments = 2;
}

message Reply {
  string msg = 1;
}

message Message {
  string username = 1;
  string msg = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message ID {
  int32 id = 1;
}

message ServerInfo {
  int32 serverid = 1;
  string hostname = 2;
  string port = 3;
  string type = 4;
  int32 clusterid = 5;
  bool ismaster = 6;
}

message Confirmation {
  bool status = 1;
}

message ServerList {
  repeated int32 serverid = 1;
  repeated string hostname = 2;
  repeated string port = 3;
  repeated string type = 4;
}

message ListReply {
  repeated string all_users = 1;
  repeated string followers = 2;
}

// ========== SNS Client Interface ==========
service SNSService {
  rpc Login(Request) returns (Reply);
  rpc List(Request) returns (ListReply);
  rpc Follow(Request) returns (Reply);
  rpc UnFollow(Request) returns (Reply);
  rpc Timeline(stream Message) returns (stream Message);
  rpc CheckConnection(Request) returns (Reply);
}

// ========== Master -> Slave ==========
service SlaveService {
  rpc MirrorLogin(Request) returns (Reply);
  rpc MirrorFollow(Request) returns (Reply);
  rpc MirrorUnFollow(Request) returns (Reply);
  rpc MirrorTimelinePost(Message) returns (Reply);
}

// ========== Coordinator Service ==========
service CoordService {
  rpc GetSlave(ID) returns (ServerInfo);
  rpc Heartbeat(ServerInfo) returns (Confirmation);
  rpc GetServer(ID) returns (ServerInfo);
  rpc GetAllFollowerServers(ID) returns (ServerList);
  rpc GetFollowerServer(ID) returns (ServerInfo);
}
